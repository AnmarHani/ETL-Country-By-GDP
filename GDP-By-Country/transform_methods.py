"""CountriesByGDP.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BwLCYVCdcDwLtAKF3UkiPzIOG6ABOuSe

# Imports
"""

import requests
from bs4 import BeautifulSoup
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
import sqlite3

"""# Transform Methods"""

def human_format(num):
    for unit in ['','K','M','B']:
        if abs(num) < 1000.0:
            return f"{num:.1f}{unit}"
        num /= 1000.0 # Keep dividing, until it is smaller than 1000, print the Unit.
    return f"{num:.1f}T" # Tera if so big

def transform_table_data(tables, table_num=2):
  df = pd.read_html(str(tables[table_num]))[0]

  # flatten MultiIndex (Typical Wikipedia Tables be MultiIndex) columns (safe way)
  df.columns = [col[1] if isinstance(col, tuple) else col for col in df.columns] # Take only the first index, if it was a tuple, like ('Country', 'Country/Country') take the second or the first no difference.

  # clean out footnote markers like [n 1]
  df = df.replace(to_replace=r'\[n \d+\]', value='', regex=True)

  # Rename Columns
  df.columns = ['Country', 'Region', 'IMF Estimate', 'IMF Year', 'WB Estimate', 'WB Year', 'UN Estimate', 'UN Year']

  # Convert from String to Numeric
  ## First Way
  # numeric_cols = ['IMF Estimate', 'World Bank Estimate', 'UN Estimate']
  # df[numeric_cols] = df[numeric_cols].apply(pd.to_numeric, errors='coerce')

  ## Second Way
  df['IMF Estimate'] = pd.to_numeric(df['IMF Estimate'], errors='coerce')
  df['WB Estimate'] = pd.to_numeric(df['WB Estimate'], errors='coerce')
  df['UN Estimate'] = pd.to_numeric(df['UN Estimate'], errors='coerce')

  df['IMF Year'] = pd.to_numeric(df['IMF Year'], errors='coerce').dropna().astype('Int64')
  df['WB Year'] = pd.to_numeric(df['WB Year'], errors='coerce').dropna().astype('Int64')
  df['UN Year'] = pd.to_numeric(df['UN Year'], errors='coerce').dropna().astype('Int64')

  # Divide each IMF Estimate by billion, and round to 2 X.XX
  df['IMF GDP (Billion USD)'] = (df['IMF Estimate'] / 1e9).round(2)

  # Sort values Desceding by IMF GDP, and Modify the original Dataframe 'df'
  df.sort_values(by='IMF GDP (Billion USD)', ascending=False, inplace=True)

  # Apply in a new Column for each Row the Human Format function e.g. 1000 -> 1K. as a String just for Visualization.
  df['IMF Estimate Human Readable'] = df['IMF Estimate'].apply(human_format)

  # df.head(50)
  # df['IMF Estimate']

  return df